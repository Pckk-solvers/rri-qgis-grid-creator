name: Build and Draft Release Windows EXE

on:
  push:
    # v1.11, v2.0 など “v数字.数字” のタグをプッシュしたときに実行
    tags:
      - 'v*.*'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: windows-latest
    env:
      # タグ名そのまま（例: "v1.11"）
      VERSION: ${{ github.ref_name }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller

      - name: Build EXE via PyInstaller CLI (onedir)
        shell: bash
        run: |
          pyinstaller --onedir \
            --name "RQGC-${{ env.VERSION }}-win" \
            --paths "src" \
            --add-data "config\\standard_mesh.shx;config" \
            --add-data "config\\standard_mesh.shp;config" \
            --add-data "config\\standard_mesh.prj;config" \
            --add-data "config\\standard_mesh.dbf;config" \
            --add-data "config\\standard_mesh.cpg;config" \
            --collect-data rasterio \
            --collect-binaries rasterio \
            --hidden-import "rasterio._shim" \
            --hidden-import "rasterio.sample" \
            --hidden-import "tkinter" \
            --hidden-import "tkinter.ttk" \
            --hidden-import "tkinter.filedialog" \
            --hidden-import "tkinter.messagebox" \
            --strip \
            --console \
            src\\full_pipline_gui.py

      - name: Zip the output folder
        shell: pwsh
        run: |
          Compress-Archive -Path dist\RQGC-${{ env.VERSION }}-win -DestinationPath dist\RQGC-${{ env.VERSION }}-win.zip

      - name: Create GitHub Release (draft)
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          draft: true
          prerelease: false

      - name: Upload ZIP as Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/RQGC-${{ env.VERSION }}-win.zip
          asset_name: RQGC-${{ env.VERSION }}-win.zip
          asset_content_type: application/zip
